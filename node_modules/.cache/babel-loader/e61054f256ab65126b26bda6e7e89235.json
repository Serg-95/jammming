{"ast":null,"code":"var clientId='f1f2de1d319c4f4e8c5f26efc954b279';var redirectUri=\"http://curved-position.surge.sh\";// \"http://localhost:3000/\": this address has been changed on the current. \nvar accessToken;var Spotify={getAccessToken:function getAccessToken(){if(accessToken){return accessToken;}//check for access token match\nvar accessTokenMatch=window.location.href.match(/access_token=([^&]*)/);var expiresInMatch=window.location.href.match(/expires_in=([^&]*)/);if(accessTokenMatch&&expiresInMatch){accessToken=accessTokenMatch[1];var expiresIn=Number(expiresInMatch[1]);//This clears the parameters, allowing us to grab a new access token when it expires.\nwindow.setTimeout(function(){return accessToken='';},expiresIn*1000);window.history.pushState('Access Token',null,'/');return accessToken;}else{var accessUrl=\"https://accounts.spotify.com/authorize?client_id=\".concat(clientId,\"&response_type=token&scope=playlist-modify-public&redirect_uri=\").concat(redirectUri);window.location=accessUrl;}},search:function search(term){var accessToken=Spotify.getAccessToken();return fetch(\"https://api.spotify.com/v1/search?type=track&q=\".concat(term),{headers:{Authorization:\"Bearer \".concat(accessToken)}}).then(function(response){return response.json();}).then(function(jsonResponse){if(!jsonResponse.tracks){return[];}return jsonResponse.tracks.items.map(function(track){return{id:track.id,name:track.name,artist:track.artists[0].name,album:track.album.name,uri:track.uri};});});},savePlaylist:function savePlaylist(name,trackUris){if(!name||!trackUris.length){return;}var accessToken=Spotify.getAccessToken();var headers={Authorization:\"Bearer \".concat(accessToken)};var userId;return fetch('https://api.spotify.com/v1/me',{headers:headers}).then(function(response){return response.json();}).then(function(jsonResponse){userId=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists\"),{headers:headers,method:'POST',body:JSON.stringify({name:name})}).then(function(response){return response.json();}).then(function(jsonResponse){var playlistId=jsonResponse.id;return fetch(\"https://api.spotify.com/v1/users/\".concat(userId,\"/playlists/\").concat(playlistId,\"/tracks\"),{headers:headers,method:'POST',body:JSON.stringify({uris:trackUris})});});});}};export default Spotify;","map":{"version":3,"names":["clientId","redirectUri","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","search","term","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","id","name","artist","artists","album","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris"],"sources":["C:/Users/Сергій/Desktop/Development_folder/Projects/react_projects/jammming/src/util/Spotify.js"],"sourcesContent":["\r\nconst clientId = 'f1f2de1d319c4f4e8c5f26efc954b279'\r\nconst redirectUri = \"http://curved-position.surge.sh\" // \"http://localhost:3000/\": this address has been changed on the current. \r\n\r\nlet accessToken\r\n\r\nconst Spotify = {\r\n\r\n\r\ngetAccessToken() {\r\n    if (accessToken) {\r\n        return accessToken\r\n    }\r\n\r\n    //check for access token match\r\n\r\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/)\r\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/)\r\n\r\n    if (accessTokenMatch && expiresInMatch) {\r\n        accessToken = accessTokenMatch[1]\r\n        const expiresIn = Number(expiresInMatch[1])\r\n        //This clears the parameters, allowing us to grab a new access token when it expires.\r\n        window.setTimeout(() => accessToken = '', expiresIn * 1000)\r\n        window.history.pushState('Access Token', null, '/');\r\n        return accessToken\r\n    } else {\r\n        const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`\r\n        window.location = accessUrl\r\n    }\r\n},    \r\n\r\nsearch(term) {\r\n   const accessToken = Spotify.getAccessToken()\r\n   return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, \r\n          {headers: { Authorization: `Bearer ${accessToken}` } }).then(response => {\r\n            return response.json()\r\n          }).then(jsonResponse => {\r\n            if(!jsonResponse.tracks) {\r\n                return []\r\n            } \r\n            return jsonResponse.tracks.items.map(track => ({\r\n                id: track.id,\r\n                name: track.name,\r\n                artist: track.artists[0].name,\r\n                album: track.album.name,\r\n                uri: track.uri\r\n            }))\r\n          })\r\n},\r\n\r\nsavePlaylist(name, trackUris) {\r\n    if(!name || !trackUris.length) {\r\n        return\r\n    }\r\n\r\n    const accessToken = Spotify.getAccessToken()\r\n    const headers = { Authorization: `Bearer ${accessToken}` }\r\n    let userId\r\n\r\n    return fetch('https://api.spotify.com/v1/me', { headers: headers }).then(response => response.json()).then(jsonResponse => {userId = jsonResponse.id\r\n    return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, \r\n        { \r\n            headers: headers, \r\n            method: 'POST', \r\n            body: JSON.stringify({ name: name })\r\n        }).then(response => response.json()\r\n        ).then(jsonResponse => {\r\n            const playlistId = jsonResponse.id\r\n            return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, \r\n              {\r\n                headers: headers, \r\n                method: 'POST', \r\n                body: JSON.stringify({ uris: trackUris })\r\n              }\r\n            )\r\n        })  \r\n    })\r\n    \r\n}\r\n\r\n}\r\n\r\nexport default Spotify \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}